{
  "name": "flite",
  "version": "0.1.2",
  "description": "binding for flite, a tiny text-to-speech synthesizer",
  "main": "flite.js",
  "dependencies": {
    "temp": "~0.4.0"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jden/node-flite.git"
  },
  "keywords": [
    "flite",
    "tts",
    "text",
    "speech",
    "robot",
    "robots"
  ],
  "author": {
    "name": "jden",
    "email": "jason@denizac.org"
  },
  "license": "MIT",
  "readme": "# flite\nbinding for flite, a tiny text-to-speech synthesizer\n\n## installation\n\n    $ npm install flite\n\nalso requires `flite 1.4.x`([www](http://www.speech.cs.cmu.edu/flite/)) and either `aplay`([www](http://alsa.opensrc.org/Aplay)) or `afplay` (default on OS X) to be installed and in your `$PATH`.\n\nFlite is super tiny and fast and works great on ARM (eg, robots!), and has a variety of voices available (which are compiled into the binary - you probably want to build it yourself).\n\n## example\n\n    var flite = require('flite')\n\n    var message = \"you know what we need? some more waffles!\"\n\n    flite(function (err, speech) {\n      speech.say(message, function (err) {\n        if (err) console.error('I\\'m afraid I can\\'t do that, Dave', err);\n      });\n    });\n\n## usage\n\n    var flite = require('flite')\n    flite([config], callback)\n\n - config object (optional)\n - callback: function (err, speech) - initializes and returns a speech object\n\nconfig is an object with any of the following keys\n\n - voice: string - the name of a voice\n - ssml: boolean - treat input as [ssml](http://en.wikipedia.org/wiki/Speech_Synthesis_Markup_Language)\n\n\n`speech.voices // array`\n\n  array of valid voice names to use with the `voice` configuration setting.\n\n\n`speech.config(configObj)`\n\n  set configuration settings for this instance of `speech`\n\n`speech.say(text, [fileout], callback)`\n\n  speak the given input string `text`. if `fileout` is specified, the wavefile will be writen to that file and not to the speakers. if `fileout` is omitted, the wavefile will be played immediately. `callback` is invoked after the wavefile is written or the sound is done playing.\n\n## license\n\nMIT. (c) 2012 jden - Jason Denizac <jason@denizac.org>",
  "readmeFilename": "README.md",
  "_id": "flite@0.1.2",
  "dist": {
    "shasum": "069e4bdc050c95321f88fd23504ca05235eafda8"
  },
  "_from": "flite@0.1.2"
}
